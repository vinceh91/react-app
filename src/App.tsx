import { useEffect, useState } from "react";

import { CanceledError } from "./services/api-client";
import usersService, { User } from "./services/users-service";

function App() {
  const [users, setUsers] = useState<User[]>([]);
  const [error, setError] = useState("");
  useEffect(() => {
    const { request, cancel } = usersService.getAllUsers();
    request
      .then((res) => setUsers(res.data))
      .catch((err) => {
        if (err instanceof CanceledError) return;
        setError(err.message);
      });
    return cancel;
  }, []);

  function addUser() {
    const originalUsers = users;
    const newUser = { id: 0, name: "Vincent" };
    setUsers([newUser, ...users]);
    usersService
      .addUser(newUser)
      // to get the id generated by the server
      .then(({ data: savedUser }) => setUsers([savedUser, ...users]))
      // .then((res) => setUsers([res.data, ...users]))
      .catch((err) => {
        setError(err.message);
        setUsers(originalUsers);
      });
  }

  function deleteUser(id: number) {
    const originalUsers = users;
    setUsers(users.filter((user) => user.id != id));

    usersService.deleteUser(id).catch((err) => {
      setError(err.message);
      setUsers(originalUsers);
    });
  }
  function updateUser(user: User) {
    const originalUsers = users;
    const updatedUser = { ...user, name: user.name + "!" };
    setUsers(users.map((u) => (u.id === user.id ? updatedUser : u)));
    usersService.updateUser(updatedUser).catch((err) => {
      setError(err.message);
      setUsers(originalUsers);
    });
  }
  return (
    <>
      {error && <p className="text-danger">{error}</p>}
      <button className="btn btn-primary mb3" onClick={addUser}>
        Add
      </button>
      <ul className="list-group">
        {users.map((user) => (
          <li
            key={user.id}
            className="list-group-item d-flex justify-content-between"
          >
            {user.name}
            <button
              className="btn btn-outline-danger"
              onClick={() => deleteUser(user.id)}
            >
              Delete
            </button>
            <button
              className="btn btn-secondary"
              onClick={() => updateUser(user)}
            >
              Update
            </button>
          </li>
        ))}
      </ul>
    </>
  );
}

export default App;
